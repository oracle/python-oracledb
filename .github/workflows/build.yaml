name: Build python-oracledb packages

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tgt:
        description: List of package targets to build
        default: 'Linux, macOS, Windows, Source'
        required: false

jobs:

  build_source_package:
    name: Build source package
    if: contains(inputs.tgt, 'Source') || inputs.tgt == ''
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: 3.13

      - name: Ensure build package is present
        run: python -m pip install setuptools

      - name: Build wheel for Python ${{ matrix.python-version }}
        run: python setup.py sdist

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-oracledb-source
          path: dist

  build_linux_wheels:
    name: Build wheels for Linux
    if: contains(inputs.tgt, 'Linux') || inputs.tgt == ''
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
            container: quay.io/pypa/manylinux_2_28_x86_64
          - os: ubuntu-24.04-arm
            platform: arm64
            container: quay.io/pypa/manylinux_2_28_aarch64
          - os: alpine-3.22
            platform: amd64
            container: quay.io/pypa/musllinux_1_2_x86_64
          - os: alpine-3.22-arm
            platform: arm64
            container: quay.io/pypa/musllinux_1_2_aarch64

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Generate script
        run: |
          echo export PYO_COMPILE_ARGS=-g0 > build.sh
          echo /opt/python/cp39-cp39/bin/python3.9 -m build >> build.sh
          echo /opt/python/cp310-cp310/bin/python3.10 -m build >> build.sh
          echo /opt/python/cp311-cp311/bin/python3.11 -m build >> build.sh
          echo /opt/python/cp312-cp312/bin/python3.12 -m build >> build.sh
          echo /opt/python/cp313-cp313/bin/python3.13 -m build >> build.sh
          echo /opt/python/cp314-cp314/bin/python3.14 -m build >> build.sh
          echo cd dist >> build.sh
          echo auditwheel repair *.whl >> build.sh
          echo rm *.whl >> build.sh
          echo mv wheelhouse/*.whl . >> build.sh
          chmod +x build.sh

      - name: Build wheels
        run: |
          docker run \
            -v $(pwd):/io  \
            -w /io \
            --platform linux/${{ matrix.platform }} \
            ${{ matrix.container }} \
            ./build.sh

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux_${{ matrix.platform }}_wheels
          path: dist/*.whl

  build_macos_wheels:
    name: Build wheels for ${{ matrix.os }} Python-${{ matrix.python-version}}-${{ matrix.arch }}
    if: contains(inputs.tgt, 'macOS') || inputs.tgt == ''
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14']
        arch: ['']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
          allow-prereleases: true

      - name: Ensure build package is present
        run: python -m pip install build

      - name: Build wheel for Python ${{ matrix.python-version }}
        run: python -m build

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-oracledb-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.arch }}
          path: dist/*.whl

  build_windows_wheels:
    name: Build wheels for ${{ matrix.os }} Python-${{ matrix.python-version}}-${{ matrix.arch }}
    if: contains(inputs.tgt, 'Windows') || inputs.tgt == ''
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13.5', '3.14']
        arch: ['x86', '']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
          allow-prereleases: true

      - name: Ensure build package is present
        run: python -m pip install build

      - name: Build wheel for Python ${{ matrix.python-version }}
        run: python -m build

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-oracledb-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.arch }}
          path: dist/*.whl

  combine_artifacts:
    name: Combine artifacts into single artifact
    if: ${{ always() }}
    needs: [build_source_package, build_linux_wheels, build_macos_wheels, build_windows_wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: python-oracledb-wheels
          delete-merged: true
